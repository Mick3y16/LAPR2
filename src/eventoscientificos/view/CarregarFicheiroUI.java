package eventoscientificos.view;

import eventoscientificos.controllers.CarregarFicheiroController;
import eventoscientificos.model.Administrador;
import eventoscientificos.model.Empresa;
import java.awt.Frame;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 * @author G01
 */
public class CarregarFicheiroUI extends javax.swing.JDialog {

    private Frame framePai;
    private CarregarFicheiroController controller;

    /**
     * Creates new form CarregarFicheiroUI
     * @param parent parent
     * @param modal modal
     * @param empresa empresa
     */
    public CarregarFicheiroUI(java.awt.Frame parent, boolean modal, Empresa empresa) {
        super(parent, "Carregar Ficheiro", modal);
        this.framePai = parent;
        this.controller = new CarregarFicheiroController(empresa);
        this.controller.getListaEventosAceitarArtigos();
        setResizable(false);
        initComponents();
        getRootPane().setDefaultButton(this.btn_selecionarEvento);
        setLocationRelativeTo(null);
        if (!empresa.isAdministrador(new Administrador(
                empresa.getUtilizadorAutenticado()))) {
            JOptionPane.showMessageDialog(
                    framePai,
                    "Não tem permissões para submeter artigos a partir de"
                    + "ficheiros.",
                    "Carregar Ficheiro",
                    JOptionPane.ERROR_MESSAGE);
            dispose();
        } else if (this.controller.getListaEventosAceitarEventos().isEmpty()) {
            JOptionPane.showMessageDialog(
                    framePai,
                    "Não existem eventos ou sessões temáticas a aceitar submissões"
                    + "de artigos.",
                    "Carregar Ficheiro",
                    JOptionPane.ERROR_MESSAGE);
            dispose();
        } else {
            setVisible(true);
            pack();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnl_selecionarSubmissivel = new javax.swing.JPanel();
        btn_selecionarEvento = new javax.swing.JButton();
        cmb_selecionarEvento = new javax.swing.JComboBox(this.controller.getListaEventosAceitarEventos().toArray());
        btn_cancelar = new javax.swing.JButton();
        btn_importarSubmissao = new javax.swing.JButton();
        pnl_ficheiro = new javax.swing.JPanel();
        txt_ficheiro = new javax.swing.JTextField();
        btn_ficheiro = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        pnl_selecionarSubmissivel.setBorder(javax.swing.BorderFactory.createTitledBorder("Selecione o evento para o qual pretende importar a submissão"));

        btn_selecionarEvento.setText("Selecionar");
        btn_selecionarEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_selecionarEventoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_selecionarSubmissivelLayout = new javax.swing.GroupLayout(pnl_selecionarSubmissivel);
        pnl_selecionarSubmissivel.setLayout(pnl_selecionarSubmissivelLayout);
        pnl_selecionarSubmissivelLayout.setHorizontalGroup(
            pnl_selecionarSubmissivelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_selecionarSubmissivelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cmb_selecionarEvento, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_selecionarEvento)
                .addContainerGap())
        );
        pnl_selecionarSubmissivelLayout.setVerticalGroup(
            pnl_selecionarSubmissivelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_selecionarSubmissivelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_selecionarSubmissivelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_selecionarEvento)
                    .addComponent(cmb_selecionarEvento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btn_cancelar.setText("Cancelar");
        btn_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelarActionPerformed(evt);
            }
        });

        btn_importarSubmissao.setText("Importar Submissão");
        btn_importarSubmissao.setEnabled(false);
        btn_importarSubmissao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_importarSubmissaoActionPerformed(evt);
            }
        });

        pnl_ficheiro.setBorder(javax.swing.BorderFactory.createTitledBorder("Ficheiro"));

        txt_ficheiro.setEnabled(false);

        btn_ficheiro.setText("Escolher Ficheiro");
        btn_ficheiro.setEnabled(false);
        btn_ficheiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ficheiroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_ficheiroLayout = new javax.swing.GroupLayout(pnl_ficheiro);
        pnl_ficheiro.setLayout(pnl_ficheiroLayout);
        pnl_ficheiroLayout.setHorizontalGroup(
            pnl_ficheiroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_ficheiroLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txt_ficheiro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_ficheiro)
                .addContainerGap())
        );
        pnl_ficheiroLayout.setVerticalGroup(
            pnl_ficheiroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_ficheiroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_ficheiroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_ficheiro)
                    .addComponent(txt_ficheiro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnl_selecionarSubmissivel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnl_ficheiro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 572, Short.MAX_VALUE)
                        .addComponent(btn_importarSubmissao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_cancelar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnl_selecionarSubmissivel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnl_ficheiro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_cancelar)
                    .addComponent(btn_importarSubmissao))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_selecionarEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_selecionarEventoActionPerformed
        int indice = this.cmb_selecionarEvento.getSelectedIndex();
        this.controller.selecionarEvento(indice);

        this.cmb_selecionarEvento.setEnabled(false);
        this.btn_selecionarEvento.setEnabled(false);
        this.btn_ficheiro.setEnabled(true);
        getRootPane().setDefaultButton(btn_ficheiro);
    }//GEN-LAST:event_btn_selecionarEventoActionPerformed

    private void btn_ficheiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ficheiroActionPerformed
        Janela.personalizarFileChooserEmPortugues();
        JFileChooser escolherFicheiro = new JFileChooser();
        Janela.definirFiltroExtensaoCSV(escolherFicheiro);
        int opcao = escolherFicheiro.showOpenDialog(this);

        if (opcao == JFileChooser.APPROVE_OPTION) {
            File ficheiro = escolherFicheiro.getSelectedFile();

            if (!ficheiro.getName().endsWith(".csv")) {
                JOptionPane.showMessageDialog(
                        this,
                        "O ficheiro deve ter o formato CSV.",
                        "Carregar Ficheiro",
                        JOptionPane.ERROR_MESSAGE);
            } else {
                this.txt_ficheiro.setText(ficheiro.getAbsolutePath());
                this.btn_importarSubmissao.setEnabled(true);
                getRootPane().setDefaultButton(this.btn_importarSubmissao);
            }
        }
    }//GEN-LAST:event_btn_ficheiroActionPerformed

    private void btn_importarSubmissaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_importarSubmissaoActionPerformed
        try {
            String opcoes[] = {"Sim", "Não"};
            int resposta = JOptionPane.showOptionDialog(
                    this,
                    "Pretende carregar o artigo a partir ficheiro?",
                    "Carregar Ficheiro", 0,
                    JOptionPane.QUESTION_MESSAGE, null, opcoes, opcoes[0]);
            if (resposta == 0) {
                if (this.controller.submeterFicheiro(txt_ficheiro.getText())) {
                    JOptionPane.showMessageDialog(
                            this,
                            "Submissão importada com sucesso.",
                            "Carregar Ficheiro",
                            JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(
                            this,
                            "Não foi possível importar a submissão.",
                            "Carregar Ficheiro",
                            JOptionPane.ERROR_MESSAGE);
                }
            }
            dispose();
        } catch (IllegalArgumentException ex) {
            JOptionPane.showMessageDialog(
                    this,
                    ex.getMessage(),
                    "Carregar Ficheiro",
                    JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btn_importarSubmissaoActionPerformed

    private void btn_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelarActionPerformed
        dispose();
    }//GEN-LAST:event_btn_cancelarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_cancelar;
    private javax.swing.JButton btn_ficheiro;
    private javax.swing.JButton btn_importarSubmissao;
    private javax.swing.JButton btn_selecionarEvento;
    private javax.swing.JComboBox cmb_selecionarEvento;
    private javax.swing.JPanel pnl_ficheiro;
    private javax.swing.JPanel pnl_selecionarSubmissivel;
    private javax.swing.JTextField txt_ficheiro;
    // End of variables declaration//GEN-END:variables
}
